TODO:
    Criar mensagem que defina a velocidade que se quer para o PathFollower seguir. Por enquanto fixed speed
    Forces2Currents apply saturation to the currents(also keep saturation in the simulator itself)
    Service no PID para dar clear/reset
    Parametros dos motores em argumentos e nos lerem
    CALCULATE FORCE U, R when new currents are received for efficiency
    Simular vento e correntes
    Simular AHRS
    PID Gains in parameters



NOTAS:
    Referencia Yaw em radianos dentro dos nos mas em graus nos topicos e prints
    Velocidades em m/s
    No plotter.py e rviz foram abandonados para usar foxglove


# How to use
ros2 launch project_tsb all.py


# Quando o floxglove se passa:
export AMENT_PREFIX_PATH=/home/tomas/ros2_ws/install/project_tsb:/home/tomas/ros2_ws/install/project_tsb_msgs:/opt/ros/humble
# Source
source /opt/ros/humble/setup.bash
cd ~/ros2_ws/src

# BUILD
colcon build --symlink-install --packages-select PACKAGE
# --symlink-install para nao ser preciso compilar quando se mudam os launch files
. install/setup.bash

# RUN
ros2 run PACKAGE NODE

# Rviz
ros2 run rviz2 rviz2

# Create new Package
ros2 pkg create --build-type ament_cmake NAME


DOCS UTEIS:
    https://docs.ros2.org/beta3/api/rclcpp/classrclcpp_1_1node_1_1Node.html
    https://docs.ros.org/en/humble/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.html
    https://docs.ros.org/en/humble/Tutorials/Intermediate/Tf2/Quaternion-Fundamentals.html
    https://docs.ros2.org/foxy/api/nav_msgs/msg/Odometry.html
    https://docs.ros.org/en/humble/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.html
    https://www.theconstruct.ai/learn-how-to-enable-live-parameter-updates-in-ros-2-cpp/
    https://kluge.in-chemnitz.de/opensource/spline/