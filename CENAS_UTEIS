TODO:
    Criar mensagem que defina a velocidade que se quer para o PathFollower seguir. Por enquanto fixed speed
    Mudar msg "BoatPosition" para "BoatState"
    Forces2Currents apply saturation to the currents(also keep saturation in the simulator itself)
    Criar no para path following
    Service no PID para dar clear/reset
    Implementar deadzone na corrent dos motores. Por ex: |corrente| < 0.5 -> corrente = 0



NOTAS:
    Referencia Yaw em radianos dentro dos nos mas em graus nos topicos
    O no do plot converte psi em graus para plot


# How to use
ros2 run project_tsb simulator
ros2 run project_tsb pid --ros-args -p kp_u:=10.5 -p ki_u:=4.5 -p kd_u:=0.8 -p kp_psi:=0.18 -p kd_psi:=1.2
ros2 run project_tsb plotter.py
ros2 topic pub /topic1 std_msgs/msg/Float32MultiArray '{data: [0.2, 90]}'
ros2 service call /reset_boat std_srvs/srv/Trigger

Bons parametros:
kp_u:=10.8
ki_u:=4.6
kd_u:=1.0
kp_psi:=0.4
kd_psi:=2.2


# Quando o floxglove se passa:
export AMENT_PREFIX_PATH=/home/tomas/ros2_ws/install/project_tsb:/home/tomas/ros2_ws/install/project_tsb_msgs:/opt/ros/humble
# Source
source /opt/ros/humble/setup.bash
cd ~/ros2_ws/src

# BUILD
colcon build --symlink-install --packages-select PACKAGE
# --symlink-install para nao ser preciso compilar quando se muda o ficheiro do rviz
. install/setup.bash

# RUN
ros2 run PACKAGE NODE

# Rviz
ros2 run rviz2 rviz2

# Create new Package
ros2 pkg create --build-type ament_cmake NAME


DOCS UTEIS:
    https://docs.ros2.org/beta3/api/rclcpp/classrclcpp_1_1node_1_1Node.html
    https://docs.ros.org/en/humble/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.html
    https://docs.ros.org/en/humble/Tutorials/Intermediate/Tf2/Quaternion-Fundamentals.html
    https://docs.ros2.org/foxy/api/nav_msgs/msg/Odometry.html
    https://docs.ros.org/en/humble/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Service-And-Client.html
    https://www.theconstruct.ai/learn-how-to-enable-live-parameter-updates-in-ros-2-cpp/